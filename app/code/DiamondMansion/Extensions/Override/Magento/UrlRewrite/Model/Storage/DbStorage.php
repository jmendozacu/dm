<?php

namespace DiamondMansion\Extensions\Override\Magento\UrlRewrite\Model\Storage;

use Magento\UrlRewrite\Service\V1\Data\UrlRewrite;
use Magento\UrlRewrite\Model\OptionProvider;

class DbStorage extends \Magento\UrlRewrite\Model\Storage\DbStorage
{
    protected function doFindOneByData(array $data) {
        if (isset($data[UrlRewrite::REQUEST_PATH])) {
            $data[UrlRewrite::REQUEST_PATH] = rtrim($data[UrlRewrite::REQUEST_PATH], '/') . '/';
            $eavAttribute = \Magento\Framework\App\ObjectManager::getInstance()->get('\Magento\Eav\Model\Config')->getAttribute('catalog_product', 'dm_stone_shape');
            foreach ($eavAttribute->getSource()->getAllOptions() as $eavOption) {
                $shape = strtolower(str_replace(" ", "-", $eavOption['label']));
                $prefix = ($shape == 'heart') ? $shape . '-shape-' : $shape . '-cut-';
                if (strpos($data[UrlRewrite::REQUEST_PATH], $prefix) === 0) {
                    $data[UrlRewrite::REQUEST_PATH] = rtrim(substr($data[UrlRewrite::REQUEST_PATH], strlen($prefix)), '/') . '/';
                }
            }
        }

        if (array_key_exists(UrlRewrite::REQUEST_PATH, $data)
            && is_string($data[UrlRewrite::REQUEST_PATH])
        ) {
            $result = null;

            $requestPath = $data[UrlRewrite::REQUEST_PATH];

            $data[UrlRewrite::REQUEST_PATH] = [
                rtrim($requestPath, '/'),
                rtrim($requestPath, '/') . '/',
            ];

            $resultsFromDb = $this->connection->fetchAll($this->prepareSelect($data));

            if (count($resultsFromDb) === 1) {
                $resultFromDb = current($resultsFromDb);
                $resultFromDb[UrlRewrite::REQUEST_PATH] = rtrim($resultFromDb[UrlRewrite::REQUEST_PATH], '/') . '/';
                $redirectTypes = [OptionProvider::TEMPORARY, OptionProvider::PERMANENT];

                // If request path matches the DB value or it's redirect - we can return result from DB
                $canReturnResultFromDb = ($resultFromDb[UrlRewrite::REQUEST_PATH] === $requestPath
                    || in_array((int)$resultFromDb[UrlRewrite::REDIRECT_TYPE], $redirectTypes, true));

                // Otherwise return 301 redirect to request path from DB results
                $result = $canReturnResultFromDb ? $resultFromDb : [
                    UrlRewrite::ENTITY_TYPE => 'custom',
                    UrlRewrite::ENTITY_ID => '0',
                    UrlRewrite::REQUEST_PATH => $requestPath,
                    UrlRewrite::TARGET_PATH => $resultFromDb[UrlRewrite::REQUEST_PATH],
                    UrlRewrite::REDIRECT_TYPE => OptionProvider::PERMANENT,
                    UrlRewrite::STORE_ID => $resultFromDb[UrlRewrite::STORE_ID],
                    UrlRewrite::DESCRIPTION => null,
                    UrlRewrite::IS_AUTOGENERATED => '0',
                    UrlRewrite::METADATA => null,
                ];
            } else {
                // If we have 2 results - return the row that matches request path
                foreach ($resultsFromDb as $resultFromDb) {
                    $resultFromDb[UrlRewrite::REQUEST_PATH] = rtrim($resultFromDb[UrlRewrite::REQUEST_PATH], '/') . '/';
                    if ($resultFromDb[UrlRewrite::REQUEST_PATH] === $requestPath) {
                        $result = $resultFromDb;
                        break;
                    }
                }
            }

            return $result;
        }

        return $this->connection->fetchRow($this->prepareSelect($data));
    }
}